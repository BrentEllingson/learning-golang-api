basePath: /api/v1
definitions:
  dto.InsertTask:
    properties:
      title:
        type: string
    required:
    - title
    type: object
  dto.PingResponse:
    properties:
      message:
        type: string
    type: object
  dto.Task:
    properties:
      id:
        type: integer
      title:
        type: string
    required:
    - title
    type: object
  dto.UpdateTask:
    properties:
      title:
        type: string
    type: object
info:
  contact: {}
  description: This is a simple API to learn Golang
  title: Learning Golang API
  version: "1.0"
paths:
  /ping:
    get:
      consumes:
      - '"*/*"'
      description: ping the server
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.PingResponse'
      summary: ping the server
      tags:
      - healthcheck
  /tasks:
    get:
      consumes:
      - application/json
      description: get a list of tasks
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.Task'
            type: array
      summary: get a list of tasks
      tags:
      - tasks
    post:
      consumes:
      - application/json
      description: insert a task
      parameters:
      - description: task
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/dto.InsertTask'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.Task'
      summary: insert a task
      tags:
      - tasks
  /tasks/{id}:
    delete:
      consumes:
      - '"*/*"'
      description: delete a task
      parameters:
      - description: task ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
      summary: delete a task
      tags:
      - tasks
    get:
      consumes:
      - '"*/*"'
      description: get a task
      parameters:
      - description: task ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Task'
      summary: get a task
      tags:
      - tasks
    patch:
      consumes:
      - application/json
      description: update a task
      parameters:
      - description: task ID
        in: path
        name: id
        required: true
        type: integer
      - description: task
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateTask'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Task'
      summary: update a task
      tags:
      - tasks
swagger: "2.0"
